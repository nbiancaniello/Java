/*
 * ventas.java
 *
 * Created on 11 de noviembre de 2008, 18:30
 */

package pantallas;

import clases.CasaDeportiva;
import clases.DetallesVentas;
import clases.Productos;
import clases.Vendedores;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Ni
 */
public final class ventas extends javax.swing.JFrame implements ActionListener{
    // Propiedades declaradas para el formulario y la clase principal
    private DefaultTableModel modelo;
    private DefaultTableModel productos;
    /** Creates new form ventas */
    public ventas() {
        initComponents();
        try{
            this.setTitle(CasaDeportiva.getTitle() + " - Ventas");
            Object []columnas = {"", "Producto","Cantidad","Subtotal"};
            modelo = new DefaultTableModel(columnas,0);
            Object []columnas2 = {"","Cantidad","precio"};
            productos = new DefaultTableModel(columnas2,0);
            tbl_detalle.setModel(modelo);
            Productos.traerProductosVenta(productos);
            lbl_verFecha.setText(verFecha());
        
            ArrayList<Productos> datosProductos = new ArrayList<Productos>();
            datosProductos = Productos.traerProductos();
            this.cbo_producto.removeAllItems();
            for (Productos producto : datosProductos){
                this.cbo_producto.addItem(producto);
            }
        
            ArrayList<Vendedores> datosVendedores = new ArrayList<Vendedores>();
            datosVendedores = Vendedores.traerVendedores();
            this.cbo_vendedor.removeAllItems();
            for (Vendedores vendedor : datosVendedores){
                this.cbo_vendedor.addItem(vendedor);
            }
            btn_aceptar.addActionListener(this);
            btn_agregar.addActionListener(this);
            btn_eliminar.addActionListener(this);
            btn_cancelar.addActionListener(this);
            cbo_vendedor.addActionListener(this);
            calcularTotal();
            contarFilasDetalle();
            deshabilitarControles();
            deshabilitarDatos();
            limpiarCajas();
        }catch(Exception e){
            JOptionPane.showMessageDialog(new JFrame(), e.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_fecha = new javax.swing.JLabel();
        lbl_vendedor = new javax.swing.JLabel();
        cbo_vendedor = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_detalle = new javax.swing.JTable();
        lbl_producto = new javax.swing.JLabel();
        cbo_producto = new javax.swing.JComboBox();
        lbl_cantidad = new javax.swing.JLabel();
        txt_cantidad = new javax.swing.JTextField();
        btn_aceptar = new javax.swing.JButton();
        btn_agregar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        lbl_verFecha = new javax.swing.JLabel();
        lbl_verComprobante = new javax.swing.JLabel();
        lbl_ettotal = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        btn_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 250, 0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        lbl_fecha.setText("Fecha");

        lbl_vendedor.setText("Vendedor");

        tbl_detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Title 1"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_detalle);

        lbl_producto.setText("Producto");

        lbl_cantidad.setText("Cantidad");

        btn_aceptar.setText("Aceptar");

        btn_agregar.setText("Agregar");

        btn_eliminar.setText("Eliminar");

        lbl_ettotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_ettotal.setText("Total: $");

        lbl_total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_total.setText("0");

        btn_cancelar.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_fecha)
                        .addGap(52, 52, 52)
                        .addComponent(lbl_verFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_vendedor)
                        .addGap(35, 35, 35)
                        .addComponent(cbo_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_verComprobante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_cantidad)
                            .addComponent(lbl_producto))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbo_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_agregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_eliminar))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_ettotal)
                        .addGap(59, 59, 59)
                        .addComponent(lbl_total))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_verComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_fecha)
                            .addComponent(lbl_verFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_vendedor)
                            .addComponent(cbo_vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_producto)
                    .addComponent(cbo_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_cantidad)
                    .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_eliminar)
                    .addComponent(btn_agregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_ettotal)
                        .addComponent(lbl_total))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_aceptar)
                        .addComponent(btn_cancelar)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    try{
        System.gc();
        CasaDeportiva.setVentas(1);
    }catch(Exception e){
        JOptionPane.showMessageDialog(new JFrame(), e.getMessage());
    }
}//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JComboBox cbo_producto;
    private javax.swing.JComboBox cbo_vendedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_cantidad;
    private javax.swing.JLabel lbl_ettotal;
    private javax.swing.JLabel lbl_fecha;
    private javax.swing.JLabel lbl_producto;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JLabel lbl_vendedor;
    private javax.swing.JLabel lbl_verComprobante;
    private javax.swing.JLabel lbl_verFecha;
    private javax.swing.JTable tbl_detalle;
    private javax.swing.JTextField txt_cantidad;
    // End of variables declaration//GEN-END:variables
   
    public void habilitarControles(){
        btn_agregar.setEnabled(true);
        btn_eliminar.setEnabled(true);
        btn_cancelar.setEnabled(true);
        cbo_producto.setEnabled(true);
    }
    
    public void deshabilitarControles(){
        btn_agregar.setEnabled(false);
        btn_eliminar.setEnabled(false);
        btn_cancelar.setEnabled(false);
        cbo_producto.setEnabled(false);
    }
    
    public void deshabilitarDatos(){
        txt_cantidad.setEnabled(false);
        limpiarCajas();
    }
    
    public void habilitarDatos(){
        txt_cantidad.setEnabled(true);
    }
    
    public void limpiarCajas(){
        txt_cantidad.setText("");
    }
    
    public String verFecha() throws Exception{
        // Devuelve en una cadena la fecha del sistema.
        // Es sólo de caracter informativo
        DateFormat formatoFecha = new java.text.SimpleDateFormat("dd/MM/yyyy");
        java.util.Date fechaSistema = new java.util.Date();
        String cad = new String();
        try{            
            cad = formatoFecha.format(fechaSistema);
        }catch(Exception e){
            throw e;
        }
        return cad;
    }
    
    public int devolverFila(int codProducto) throws Exception{
        // Devuelve la fila relacionada con la tabla interna de productos
        try{
            for(int i=0;i<tbl_detalle.getRowCount();i++){
                if (codProducto == Integer.valueOf((String)tbl_detalle.getValueAt(i, 0))) return i;
            }
        }catch(Exception e){
            throw e;
        }        
        return -1;
    }
    
    public void contarFilasDetalle() throws Exception{
        // Cuenta los registros agregados al detalle
        try{
            if (tbl_detalle.getRowCount() != 0){
                btn_aceptar.setEnabled(true);
            }else{
                btn_aceptar.setEnabled(false);
            }                
        }catch(Exception e){
            throw e;
        }
    }
    
    public void limpiarDetalles() throws Exception{
        // Limpia la tabla de detalles
        int cant = modelo.getRowCount();
        try {
            for(int i=0;i<cant;i++){
                modelo.removeRow(0);
            }
        }catch (Exception e){
            throw e;
        }
    }
    
    public void calcularTotal() throws Exception{
        // Muestra el total según los productos agregados
        try{
            Float total = new Float(0);
            if (modelo.getRowCount()>0){
                for(int i=0;i<modelo.getRowCount();i++){
                    total = total + (Float)modelo.getValueAt(i, 3);
                }
            }
            lbl_total.setText(total.toString());
        }catch(Exception e){
            throw e;
        }
    }

    public void actionPerformed(ActionEvent e) {
        try{
            if (e.getSource().equals(btn_aceptar)){
                if(JOptionPane.showConfirmDialog(null,"¿Desea Registrar la Venta?", "¿Confirma?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                    Vendedores vend = (Vendedores) cbo_vendedor.getSelectedItem();
                    DetallesVentas dv = new DetallesVentas(vend.getCodVendedor());
                    dv.insertVenta(modelo);
                }
            }
            if (e.getSource().equals(btn_aceptar)||e.getSource().equals(btn_cancelar)){
                limpiarDetalles();
                calcularTotal();
                deshabilitarControles();
                deshabilitarDatos();
                cbo_vendedor.setEnabled(true);
            }
            
            if (e.getSource().equals(btn_agregar)){
                addArticle();
            }
            if (e.getSource().equals(btn_eliminar)){
                deleteArticle();
            }
            if (e.getSource().equals(cbo_vendedor)){
                if (cbo_vendedor.getSelectedIndex() > -1){
                    habilitarControles();
                    habilitarDatos();
                    cbo_vendedor.setEnabled(false);
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage());
        }
    }
    
    private void addArticle() throws Exception{
        try{
            if(txt_cantidad.getText().compareTo("")==0||txt_cantidad.getText().compareTo("0")==0){
                JOptionPane.showMessageDialog(new JFrame(), "Ingrese cantidad");
                return;
            }
            if (CasaDeportiva.verificarNumeroEntero(txt_cantidad.getText().trim())==0){
                JOptionPane.showMessageDialog(new JFrame(), "Caracter no válido. Reintente");
                return;
            }
        
            int indice;
            Productos prod = (Productos) cbo_producto.getSelectedItem();
        
            for(indice=0;indice<productos.getRowCount();indice++){
                if (prod.getCodProducto() == Integer.valueOf((String)productos.getValueAt(indice, 0))){
                    Float precio = (Float) productos.getValueAt(indice, 2);
                    prod.setPrecioVenta(precio);
                    Integer cant = (Integer) productos.getValueAt(indice, 1);
                    prod.setStockActual(cant);
                    break;
                }
            }    
            if(Integer.valueOf(txt_cantidad.getText()) > prod.getStockActual()){
                JOptionPane.showMessageDialog(new JFrame(), "No hay Stock disponible");
                txt_cantidad.setText("");
                return;
            }
            int cant = Integer.valueOf(txt_cantidad.getText());
            int fila = devolverFila(prod.getCodProducto());
            float subtotal = prod.getPrecioVenta();
            if ( fila == -1){
                subtotal = subtotal * cant;
                Object [] dato = {prod.getCodProducto(),prod.getDescripcion(),cant,subtotal};
                modelo.addRow(dato);
            }else{
                Integer cant_detalle = cant + (Integer) modelo.getValueAt(fila,2);
                subtotal = subtotal * cant_detalle;
                modelo.setValueAt(cant_detalle, fila, 2);
                modelo.setValueAt(subtotal, fila, 3);
            }
            int stock = prod.getStockActual() - cant;
            productos.setValueAt(stock, indice, 1);
            contarFilasDetalle();
            calcularTotal();
            limpiarCajas();
        }catch(Exception e){
            throw e;
        }
    }
    
    private void deleteArticle() throws Exception{
        try{
            if (tbl_detalle.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(new JFrame(), "Debe seleccionar una fila antes de eliminar","Atención",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            int indice = 0;
            Object codProducto = tbl_detalle.getValueAt(tbl_detalle.getSelectedRow(), 0);
            Object cantidad = tbl_detalle.getValueAt(tbl_detalle.getSelectedRow(), 2);
            for(indice=0;indice<productos.getRowCount();indice++){
                if ( codProducto == productos.getValueAt(indice, 0)){
                    break;
                }
            }
            int fila = devolverFila((Integer)codProducto);
            Object cant_prod = productos.getValueAt(fila, 1);
            cant_prod = (Integer)cant_prod + (Integer)cantidad;
            productos.setValueAt(cant_prod, fila, 1);
            modelo.removeRow(tbl_detalle.getSelectedRow());
            contarFilasDetalle();
            calcularTotal();
        }catch(Exception e){
        throw e;
        }
    }
}
